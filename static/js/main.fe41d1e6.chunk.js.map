{"version":3,"sources":["components/welcomeScreen/CustomNavbar.js","components/welcomeScreen/CustomContentBox.js","WelcomeScreen.js","actions/fetchOpinions.js","actions/welcomeScreenRefs.js","serviceWorker.js","reducers/navigationRefs.js","reducers/index.js","reducers/opinions.js","store/store.js","index.js","images/welcomeScreen/welcomePic1.jpg"],"names":["CustomNavbar","props","link","concat","random","fixed","expand","bg","variant","Brand","alt","src","width","height","className","Toggle","Collapse","refs","map","ref","key","onClick","scrollToRef","name","Button","CustomContentBox","styles","container","minWidth","padding","margin","headerBox","marginTop","minHeight","background","BackgroundImage1","backgroundRepeat","backgroundSize","backgroundPosition","display","alignItems","justifyContent","flexDirection","opacity","headerTypographyTitle","paddingBottom","textShadow","contentBox","cardContent","boxShadow","cardContainers","errorCardContainer","footerBox","footerContent","flex","backgroundColor","maxWidth","footerBottomBar","opinions","undefined","filter","user","id","Container","style","Box","my","Typography","opinionsFetching","CircularProgress","color","opinionsError","Card","component","CardActions","alignSelf","size","window","location","reload","Grid","spacing","index","item","xs","sm","md","Avatar","avatarUrl","title","CardContent","comment","Rating","value","Number","rating","readOnly","marginBottom","Fab","border","borderBottom","Chip","label","open","avatar","WelcomeScreen","this","dispatch","type","payload","fetch","then","response","json","catch","err","current","React","randomNum","Math","floor","navigationRefs","scrollTo","offsetTop","Component","connect","state","fetchData","initializeRefs","Boolean","hostname","match","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.fe41d1e6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport '../../WelcomeScreen.css';\r\nimport NavLink from \"react-bootstrap/NavLink\";\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nconst CustomNavbar = (props) => {\r\n\r\n    const link = \"https://cdn3.iconfinder.com/data/icons/business-avatar-1/512/\".concat(props.random, \"_avatar-256.png\");\r\n\r\n    return (\r\n        <Navbar fixed=\"top\" expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand>\r\n                <img\r\n                    alt=\"\"\r\n                    src={link}\r\n                    width=\"30\"\r\n                    height=\"30\"\r\n                    className=\"d-inline-block align-top\"\r\n                />\r\n                <span> Fluffer</span>\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle/>\r\n            <Navbar.Collapse>\r\n                <Nav className=\"mr-auto\">\r\n                    {\r\n                        props.refs !== null ? props.refs.map((ref, key) => {\r\n                            return (<NavLink key={key}\r\n                                onClick={() => props.scrollToRef(ref)}> {ref.name}\r\n                            </NavLink>)\r\n                        })\r\n                        : null\r\n                    }\r\n                </Nav>\r\n                <Nav>\r\n                    {/*<Nav.Link style={styles.loginLink}>Zaloguj się</Nav.Link>*/}\r\n                    <Button variant=\"outline-light\">Zaloguj się</Button>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n};\r\n\r\nexport default CustomNavbar;","import React from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport BackgroundImage1 from '../../images/welcomeScreen/welcomePic1.jpg';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CustomCarousel from \"./CustomCarousel\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport ThumbUpAlt from \"@material-ui/icons/ThumbUpAlt\";\r\n\r\nconst CustomContentBox = (props) => {\r\n\r\n\r\n    const styles = { // Consider moving styles to another file\r\n        container:{\r\n            minWidth:'100%',\r\n            padding:0,\r\n            margin:0\r\n        },\r\n        headerBox:{\r\n            marginTop:'0',\r\n            minHeight:'100vh',\r\n            background :`url(${BackgroundImage1})`,\r\n            backgroundRepeat:'no-repeat',\r\n            backgroundSize:'cover',\r\n            backgroundPosition:'center',\r\n            display:'flex',\r\n            alignItems:'center',\r\n            justifyContent:'center',\r\n            flexDirection:'column',\r\n            opacity:'0.9',\r\n        },\r\n        headerTypographyTitle:{\r\n            paddingBottom:'50px',\r\n            textShadow:'0 0 0.5em #000000, 0 0 0.5em #000000, 0 0 0.5em #000000'\r\n        },\r\n        contentBox:{\r\n            minHeight:'100vh',\r\n            display:'flex',\r\n            alignItems:'center',\r\n            justifyContent:'center',\r\n            flexDirection:'column',\r\n        },\r\n        cardContent:{\r\n            display:'flex',\r\n            flexDirection:'column',\r\n            alignItems:'center',\r\n            boxShadow: '0 0 10px'\r\n        },\r\n        cardContainers:{\r\n            padding:'15px',\r\n            display:'flex',\r\n            justifyContent:'center',\r\n            alignItems:'center',\r\n            flexDirection:'column'\r\n        },\r\n        errorCardContainer:{\r\n            display:'flex',\r\n            justifyContent:'center',\r\n            alignItems:'center',\r\n            height:'100px',\r\n            margin:20\r\n        },\r\n        footerBox:{\r\n            margin:0,\r\n            minHeight:'100vh',\r\n            display:'flex',\r\n            flexDirection:'column',\r\n        },\r\n        footerContent:{\r\n            flex:20,\r\n            opacity:0.5,\r\n            backgroundColor:'#28313B',\r\n            maxWidth:'100%',\r\n            display:'flex',\r\n            justifyContent:'center',\r\n            alignItems:'center',\r\n            flexDirection:'column'\r\n        },\r\n        footerBottomBar:{\r\n            flex:1,\r\n            backgroundColor:'#28313B',\r\n            maxWidth:'100%',\r\n            display:'flex',\r\n            justifyContent:'center',\r\n            alignItems:'center'\r\n        }\r\n\r\n    };\r\n\r\n    const opinions = props.opinions !== undefined ? props.opinions.filter((user) => user.id % 2 === 0) : [];\r\n\r\n    return (\r\n        <Container style={styles.container}>\r\n            <Box style={styles.headerBox} maxWidth=\"sm\" my={2} ref={props.refs[0]}>\r\n                <Typography style={styles.headerTypographyTitle} variant={\"h1\"}>Witaj w aplikacji Fluffer</Typography>\r\n                <Typography variant={\"h5\"}>Twój wygodny i przejżysty komunikator na wyciągnięcie ręki</Typography>\r\n            </Box>\r\n            <Box style={styles.contentBox} my={2} ref={props.refs[1]}>\r\n                <Typography>\r\n                    Add something here: Carousel or sth else\r\n                </Typography>\r\n            </Box>\r\n            <Box style={styles.contentBox} ref={props.refs[2]}>\r\n                <Typography style={{paddingBottom:'100px', textShadow:'2px 2px 4px #000000'}} variant=\"h2\">A oto co mówią o nas użytkownicy!</Typography>\r\n                {props.opinionsFetching ?\r\n                    <CircularProgress color=\"secondary\"/>\r\n                    : (props.opinionsError ?\r\n                        <Card style={styles.cardContent}>\r\n                            <Container style={styles.errorCardContainer}>\r\n                                <Typography variant=\"h5\" component=\"h2\">\r\n                                    Whopsie! Coś poszło nie tak. Spróbuj odświeżyć stronę klikając w przycisk \"Odśwież\"\r\n                                </Typography>\r\n                            </Container>\r\n                            <CardActions>\r\n                                <Button style={{display:'flex', alignSelf:'center'}}variant=\"contained\" size=\"medium\" color=\"primary\" onClick={() => window.location.reload()}>Odśwież</Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                        :<Container maxWidth=\"lg\">\r\n                            <Grid container spacing={10} style={{alignItems:'center'}}>\r\n                                {opinions !== undefined ? opinions.map((user, index) => (\r\n                                        <Grid item key={index} xs={12} sm={6} md={4}>\r\n                                            <Card style={styles.cardContent}>\r\n                                                <Container style={styles.cardContainers}>\r\n                                                    <Avatar\r\n                                                        src={user.avatarUrl}\r\n                                                        title=\"Image title\"\r\n                                                    />\r\n                                                    <Typography variant=\"h5\" component=\"h2\">\r\n                                                        {user.name}\r\n                                                    </Typography>\r\n                                                </Container>\r\n                                                <Container style={styles.cardContainers}>\r\n                                                    <CardContent>\r\n                                                        <Typography>\r\n                                                            {\"``\"+user.comment+\"``\"}\r\n                                                        </Typography>\r\n                                                        <Rating value={Number(user.rating)} readOnly />\r\n                                                    </CardContent>\r\n                                                </Container>\r\n                                            </Card>\r\n                                        </Grid>\r\n                                    ))\r\n                                    : null}\r\n                            </Grid>\r\n                        </Container>)\r\n                }\r\n            </Box>\r\n            <Box id=\"benefits\" style={styles.footerBox} my={2} ref={props.refs[3]}>\r\n                <Container style={styles.footerContent}>\r\n                    <div style={{marginBottom:'100px'}}>\r\n                        <Typography variant={\"h1\"}>...a to tylko początek!</Typography>\r\n                        <Typography variant={\"h2\"}>Zarejestruj konto i przekonaj się sam</Typography>\r\n                    </div>\r\n                    <Fab\r\n                        style={{backgroundColor:'blue', border:'2px solid white', minWidth:'20%', color:'white', justifyContent:'space-around'}}\r\n                        variant=\"extended\"\r\n                        size=\"medium\"\r\n                    >\r\n                        <ThumbUpAlt />\r\n                        Zacznij już dziś\r\n                    </Fab>\r\n                </Container>\r\n                <Container style={styles.footerBottomBar} maxWidth='xl'>\r\n                    <div style={{width:'40%'}}>\r\n                        <Typography style={{color:'grey', borderBottom:'1px white solid'}}>Autorzy</Typography>\r\n                        <div style={{padding:'5px 0 0 0',display:'flex',justifyContent:'space-around'}}>\r\n                            <Chip\r\n                                label=\"Nikodem Zawirski\"\r\n                                onClick={()=>window.open('https://github.com/nzawirski')}\r\n                                avatar={<Avatar alt=\"Natacha\" src=\"https://avatars2.githubusercontent.com/u/43851876?s=460&v=4\" />}\r\n                            />\r\n                            <Chip\r\n                                label=\"Adam Piątek\"\r\n                                onClick={()=>window.open('https://github.com/piatek29535')}\r\n                                avatar={<Avatar alt=\"Natacha\" src=\"https://avatars3.githubusercontent.com/u/43843885?s=460&v=4\" />}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Container>\r\n            </Box>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default CustomContentBox;","import React, {Component} from 'react';\r\nimport './WelcomeScreen.css';\r\nimport CustomNavbar from \"./components/welcomeScreen/CustomNavbar\";\r\nimport CustomContentBox from \"./components/welcomeScreen/CustomContentBox\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchOpinionsFromServer} from \"./actions/fetchOpinions\";\r\nimport {initializeRefs} from \"./actions/welcomeScreenRefs\";\r\n\r\nclass WelcomeScreen extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(fetchOpinionsFromServer())\r\n        this.props.dispatch(initializeRefs())\r\n    }\r\n\r\n    render() {\r\n        const randomNum = Math.floor(Math.random() * (12 - 7 + 1)) + 7;\r\n\r\n        const scrollToRef = (ref) => window.scrollTo(0, ref.current.offsetTop);\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <CustomNavbar\r\n                    refs={this.props.navigationRefs}\r\n                    random={randomNum}\r\n                    scrollToRef={scrollToRef}/>\r\n                <header className=\"App-header\">\r\n                  <CustomContentBox\r\n                      opinions={this.props.json}\r\n                      opinionsError={this.props.opinionsError}\r\n                      opinionsFetching={this.props.opinionsFetching}\r\n                      refs={this.props.navigationRefs}\r\n                  />\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    json: state.fetchData.json,\r\n    opinionsError: state.fetchData.opinionsError,\r\n    opinionsFetching: state.fetchData.opinionsFetching,\r\n    navigationRefs:state.initializeRefs.navigationRefs\r\n});\r\n\r\nexport default connect(mapStateToProps)(WelcomeScreen);\r\n\r\n","export function fetchOpinionsFromServer(){\r\n    return dispatch => {\r\n        dispatch({type: \"OPINIONS_FETCHING\", payload:true})\r\n        return fetch('http://localhost:9001/opinions')\r\n            .then((response) => {return response.json()})\r\n            .then((json) => {\r\n                return dispatch({type:\"OPINIONS_FETCHED\", payload:json})\r\n            })\r\n            .catch((err) => {\r\n                return dispatch({type:\"OPINIONS_FETCH_ERROR\", payload:true})\r\n            });\r\n    }\r\n}\r\n","import * as React from \"react\";\r\n\r\nexport function initializeRefs(){\r\n    return {\r\n        type:'INITIALIZE_REFS',\r\n        payload:[\r\n            {\r\n                current:React.createRef(),\r\n                name:\"O stronie\"\r\n            },\r\n            {\r\n                current:React.createRef(),\r\n                name:\"Korzyści\"\r\n            },\r\n            {\r\n                current:React.createRef(),\r\n                name:\"Opinie\"\r\n            },\r\n            {\r\n                current:React.createRef(),\r\n                name:\"Wybróbuj już teraz\"\r\n            },\r\n        ]\r\n    }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. WelcomeScreen is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const initializeRefs = (state = {\r\n    navigationRefs:[]\r\n}, action) => {\r\n    switch(action.type){\r\n        case'INITIALIZE_REFS':\r\n            return {...state, navigationRefs:action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n};","import {combineReducers} from \"redux\";\r\nimport {fetchData} from \"./opinions\";\r\nimport {initializeRefs} from \"./navigationRefs\";\r\n\r\nconst reducers = combineReducers({\r\n    fetchData,\r\n    initializeRefs\r\n});\r\n\r\nexport default reducers;","export const fetchData = (state =\r\n                              {\r\n                                  opinionsError:false,\r\n                                  opinionsFetching:true\r\n                              }\r\n                              , action) => {\r\n    switch(action.type){\r\n        case \"OPINIONS_FETCHED\":{\r\n            return {...state, json:action.payload, opinionsFetching: false}\r\n        }\r\n        case \"OPINIONS_FETCH_ERROR\":{\r\n            return {...state, opinionsError:action.payload, opinionsFetching: false}\r\n        }\r\n        case \"OPINIONS_FETCHING\":{\r\n            return {...state, opinionsFetching: action.payload}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};","import {applyMiddleware, createStore} from 'redux';\r\nimport reducers from \"../reducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunk));","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport WelcomeScreen from './WelcomeScreen';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./store/store\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <WelcomeScreen />\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/welcomePic1.6cf16aac.jpg\";"],"sourceRoot":""}